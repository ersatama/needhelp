name: Questions
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/question/getByUserId/{userId}'
    metadata:
      groupName: Questions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'getByUserId - Questions'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: perspiciatis
        type: string
        custom: []
    cleanUrlParameters:
      userId: perspiciatis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '46'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/question/firstById/{id}'
    metadata:
      groupName: Questions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'firstById - Questions'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the firstById.'
        required: true
        example: consectetur
        type: string
        custom: []
    cleanUrlParameters:
      id: consectetur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"message":"not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '45'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/question/create
    metadata:
      groupName: Questions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'create - Questions'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: placeat
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: true
        example: laborum
        type: string
        custom: []
      is_important:
        name: is_important
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      user_id: aut
      price: placeat
      title: laborum
      is_important: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
